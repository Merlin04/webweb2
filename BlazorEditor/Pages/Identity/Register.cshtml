@page "/Register"
@using BlazorEditor.Data
@using BlazorEditor.Identity
@using Microsoft.AspNetCore.Identity
@model BlazorEditor.Pages.Identity.Register
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext Context;

@{
    Layout = "_Layout";
    string token = HttpContext.Request.Query["code"].ToString();
    RegisterToken registerToken = await Context.RegisterTokens.FindAsync(token);
    bool tokenValid = registerToken != null && DateTime.Now < registerToken.Expire;
}

<div class="ui center aligned grid">
    <div class="column" id="loginColumn">
        <div class="ui segment">
            @if (UserManager.Users.ToList().Count < 1 || User.Identity.IsAuthenticated || tokenValid)
            {
                <div class="ui large header">
                    Register an account
                </div>
                <form asp-route-returnUrl="@Model.ReturnUrl" method="post" class="ui form">
                    <div class="field">
                        <label>Username</label>
                        <input asp-for="Input.Username" type="text" placeholder="Username">
                    </div>
                    <div class="field">
                        <label>Password</label>
                        <input asp-for="Input.Password" type="password" placeholder="Password">
                    </div>
                    <div class="field">
                        <label>Confirm password</label>
                        <input asp-for="Input.ConfirmPassword" type="password" placeholder="Password">
                    </div>
                    <input type="hidden" asp-for="Input.RegisterToken" value="@token" />
                    <button type="submit" class="ui button">Register</button>
                </form>
                @if (Model.ModelState.ErrorCount != 0)
                {
                    <div asp-validation-summary="All" class="ui error message"></div>
                }
            }
            else
            {
                <div class="ui error message">Sorry, you cannot create an account.</div>
            }
        </div>
    </div>
</div>